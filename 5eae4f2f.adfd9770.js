(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=(n(0),n(137));const o={id:"containerize",title:"Containerize",sidebar_label:"Containerize"},i={id:"containerize",isDocsHomePage:!1,title:"Containerize",description:"Before we can truly understand K8S, I think it makes sense to understand some basic containerization.",source:"@site/docs/containerize.md",permalink:"/app-to-k8s/docs/containerize",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/containerize.md",sidebar_label:"Containerize",sidebar:"docs",previous:{title:"The App",permalink:"/app-to-k8s/docs/the-application"},next:{title:"Get It To Kubernetes",permalink:"/app-to-k8s/docs/get-it-to-kubernetes"}},c=[{value:"<strong>Containerization vs. Virtualization via Traditional Hypervisors</strong>",id:"containerization-vs-virtualization-via-traditional-hypervisors",children:[]},{value:"<strong>Docker Not the Only Containerization Option</strong>",id:"docker-not-the-only-containerization-option",children:[]},{value:"Docker",id:"docker",children:[{value:"Image Registry",id:"image-registry",children:[]}]},{value:"Writing Dockerfile",id:"writing-dockerfile",children:[]},{value:"Best Practices",id:"best-practices",children:[]}],l={rightToc:c};function p({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Before we can truly understand K8S, I think it makes sense to understand some basic containerization. "),Object(r.b)("p",null,"Containerization is a lightweight alternative to full machine ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/V/virtualization.html"}),"virtualization")," that involves encapsulating an application in a container with its own operating environment. This provides many of the benefits of loading an application onto a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/V/virtual_machine.html"}),"virtual machine"),", as the application can be run on any suitable physical machine without any worries about dependencies."),Object(r.b)("p",null,"Containerization has gained recent prominence with the open-source ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/D/docker.html"}),"Docker"),". Docker containers are designed to run on everything from physical computers to virtual machines, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/B/bare_metal.html"}),"bare-metal")," servers, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/O/openstack.html"}),"OpenStack")," ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/C/cloud.html"}),"cloud")," clusters, public instances and more."),Object(r.b)("h3",{id:"containerization-vs-virtualization-via-traditional-hypervisors"},Object(r.b)("strong",{parentName:"h3"},"Containerization vs. Virtualization via Traditional Hypervisors")),Object(r.b)("p",null,"The foundation for containerization lies in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/L/linux-containers.html"}),"LinuX Containers")," ","(","LXC",")"," format, which is a userspace interface for the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/L/linux.html"}),"Linux")," kernel containment features. As a result, containerization only works in Linux environments and can only run Linux applications."),Object(r.b)("p",null,"This is in contrast with traditional ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/H/hypervisor.html"}),"hypervisors")," like VMware's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/V/VMware_ESX.html"}),"ESXi"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/X/Xen.html"}),"Xen")," or ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/K/kvm.html"}),"KVM"),", wherein applications can run on ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/M/Microsoft_Windows.html"}),"Windows")," or any other ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/O/operating_system.html"}),"operating system")," that supports the hypervisor."),Object(r.b)("p",null,"Another key difference with containerization as opposed to traditional hypervisors is that containers share the Linux ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/K/kernel.html"}),"kernel")," used by the operating system running the host machine, which means any other containers running on the host machine will also be using the same Linux kernel."),Object(r.b)("h3",{id:"docker-not-the-only-containerization-option"},Object(r.b)("strong",{parentName:"h3"},"Docker Not the Only Containerization Option")),Object(r.b)("p",null,"Docker may have been the first to bring attention to containerization, but it's no longer the only container system option. CoreOS recently released a streamlined alternative to Docker called ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/C/coreos-rocket.html"}),"Rocket"),"."),Object(r.b)("p",null,"And Canonical, developers of the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/U/Ubuntu.html"}),"Ubuntu")," ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.webopedia.com/TERM/L/Linux.html"}),"Linux"),"-based operating system, has announced the LXD containerization engine for Ubuntu, which will also be integrated with ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.webopedia.com/TERM/O/openstack.html"}),"OpenStack"),"."),Object(r.b)("h2",{id:"docker"},"Docker"),Object(r.b)("p",null,"For our workshop we are using docker. "),Object(r.b)("p",null,"Docker by itself could be one whole workshop ","(","it should be",")",". But we aren't here today to learn docker. So I will quickly go over the main things we need to know for our workshop. "),Object(r.b)("h3",{id:"image-registry"},"Image Registry"),Object(r.b)("p",null,"The docker images we build needs to have a space to live. You can use both public and private registry. For your super awesome secret app you probably want a private registry. With your IBM Cloud account you actually get a private image registry for free. "),Object(r.b)("h2",{id:"writing-dockerfile"},"Writing Dockerfile"),Object(r.b)("p",null,"Lets quickly see how to write a dockerfile"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"FROM ubuntu:18.04\nCOPY . /app\nRUN make /app\nCMD python /app/app.py\n")),Object(r.b)("p",null,"This is a example Dockerfile. "),Object(r.b)("p",null,"Each instruction creates one layer:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"FROM")," creates a layer from the ",Object(r.b)("inlineCode",{parentName:"li"},"ubuntu:18.04")," Docker image."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"COPY")," adds files from your Docker client\u2019s current directory."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"RUN")," builds your application with ",Object(r.b)("inlineCode",{parentName:"li"},"make"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"CMD")," specifies what command to run within the container.")),Object(r.b)("p",null,"Docker file support the following instructions"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/develop/develop-images/#dockerfile-instructions"}),"Dockerfile instructions")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#from"}),"FROM")," - Base Image we are building from"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#label"}),"LABEL")," - For organization"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#run"}),"RUN")," - To run a command while building"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#cmd"}),"CMD")," - To run a command at start"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#expose"}),"EXPOSE")," - Expose a port"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#env"}),"ENV")," - Set env variable"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#add-or-copy"}),"ADD or COPY")," - Copy files from host or a previous layer to current layer"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#entrypoint"}),"ENTRYPOINT")," - Main command of the image at runtime"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#volume"}),"VOLUME")," - For any kind of storage ","(","DB, Local Files etc",")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#user"}),"USER")," - Set user. Preferably no root if the service allows."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#workdir"}),"WORKDIR")," - Where RUN and other commands should execute in."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.docker.com/develop/develop-images/#onbuild"}),"ONBUILD")," - Executes after current Build completes")),Object(r.b)("p",null,"Lets look at one of our Dockerfiles that we are using."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"# Accept the Go version for the image to be set as a build argument.\n# Default to Go 1.12\nARG GO_VERSION=1.12\n\n# First stage: build the executable.\nFROM golang:${GO_VERSION}-alpine AS builder\n\n# Create the user and group files that will be used in the running container to\n# run the process as an unprivileged user.\nRUN mkdir /user && \\\n    echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd && \\\n    echo 'nobody:x:65534:' > /user/group\n\n# Install the Certificate-Authority certificates for the app to be able to make\n# calls to HTTPS endpoints.\n# Git is required for fetching the dependencies.\nRUN apk add --no-cache git\n\n# Set the working directory outside $GOPATH to enable the support for modules.\nWORKDIR /src\n\n# Fetch dependencies first; they are less susceptible to change on every build\n# and will therefore be cached for speeding up the next build\nCOPY ./go.mod ./go.sum ./\nRUN go mod download\n\n# Import the code from the context.\nCOPY ./ ./\n\n# Build the executable to `/app`. Mark the build as statically linked.\nRUN CGO_ENABLED=0 go build \\\n    -installsuffix 'static' \\\n    -o /app .\n\n# Final stage: the running container.\nFROM scratch AS final\n\n# Import the user and group files from the first stage.\nCOPY --from=builder /user/group /user/passwd /etc/\n\n# Import the compiled executable from the first stage.\nCOPY --from=builder /app /app\n\n# Declare the port on which the webserver will be exposed.\n# As we're going to run the executable as an unprivileged user, we can't bind\n# to ports below 1024.\nEXPOSE 8080\n\n# Perform any further action as an unprivileged user.\nUSER nobody:nobody\n\n# Run the compiled binary.\nENTRYPOINT [\"/app\"]\n")),Object(r.b)("p",null,"This is the folder structure"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),".\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 fib\n\u2502\xa0\xa0 \u2514\u2500\u2500 fib.go\n\u251c\u2500\u2500 go.mod\n\u251c\u2500\u2500 go.sum\n\u2514\u2500\u2500 main.go\n")),Object(r.b)("h2",{id:"best-practices"},"Best Practices"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create ephemeral containers"),Object(r.b)("li",{parentName:"ul"},"Exclude with .dockerignore"),Object(r.b)("li",{parentName:"ul"},"Use multi-stage builds"),Object(r.b)("li",{parentName:"ul"},"Don\u2019t install unnecessary packages"),Object(r.b)("li",{parentName:"ul"},"Minimize the number of layers"),Object(r.b)("li",{parentName:"ul"},"Decouple applications"),Object(r.b)("li",{parentName:"ul"},"Leverage build cache"),Object(r.b)("li",{parentName:"ul"},"Make small containers"),Object(r.b)("li",{parentName:"ul"},"Use the least privileged access."),Object(r.b)("li",{parentName:"ul"},"Don't store sensitive information.")))}p.isMDXComponent=!0},137:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=s(n),d=a,m=b["".concat(i,".").concat(d)]||b[d]||u[d]||o;return n?r.a.createElement(m,c(c({ref:t},p),{},{components:n})):r.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);